/* License: GNU GPLv3+, Rodrigo Schwencke (copyleft) */

@import url("massilia-mermaid-dark.css");

:root {
  /* MERMAID THÈME CLAIR : VALEURS PAR DÉFAUT */
  /* CUSTOM MERMAID VARIABLES */
  --mermaid-typeset-color: #1f2020;
  --mermaid-box-bgcolor: #bee4fc;
  --mermaid-box-border-color: #2094f3;
  --mermaid-box-text-color: var(--mermaid-typeset-color);
  --mermaid-lines-color: var(--mermaid-typeset-color);

  /* GRAPH / FLOWCHART COLORS */
  --mermaid-flowchart-bgcolor: #bee4fc;
  --mermaid-flowchart-cluster-label-color: var(--mermaid-typeset-color);
  --mermaid-cluster-subgraph-bgcolor: #e9f3fa;
  --mermaid-label-bgcolor: #ddf1fd;
  --mermaid-label-outside-bgcolor: #2094f3;
  --mermaid-label-text-color: var(--mermaid-typeset-color);
  --mermaid-label-border-color: #cecece;
  
  --mermaid-title-color: var(--mermaid-typeset-color);
  --mermaid-legend-color: var(--mermaid-typeset-color);

  /* SEQUENCE DIAGRAM COLORS */
  --mermaid-sequencediagram-bgcolor: var(--mermaid-flowchart-bgcolor);
  --mermaid-sequencediagram-loop-bgcolor: #f8ce82be;
  --mermaid-sequencediagram-loop-border: #55a9ee;
  --mermaid-sequencediagram-loop-brackettext-color: #55a9ee;
  --mermaid-sequencediagram-note-bgcolor: #f8ce82be;
  --mermaid-sequencediagram-sequencenumber-textcolor: #FFFFFF;
  --mermaid-sequencediagram-sequencenumber-bgcolor: var(--mermaid-typeset-color);
  --mermaid-sequencediagram-actorman-head-bgcolor: var(--mermaid-flowchart-bgcolor);
  --mermaid-sequencediagram-actorman-line: var(--mermaid-box-border-color);

  /* CLASS DIAGRAM COLORS */
  --mermaid-classdiagram-bgcolor: #bee4fc;
  
  /* STATE DIAGRAM COLORS */
  --mermaid-statediagram-title-bgcolor: #99d4f8;
  --mermaid-statediagram-inner-bgcolor: #ffffff;
  --mermaid-statediagram-label-outside-bgcolor: #2094f3;
  --mermaid-statediagram-box-bgcolor: #99d4f8;
  --mermaid-statediagram-cluster-divider: #2094f3;
  --mermaid-statediagram-cluster-alt-inner-bgcolor: #d8ebf7;
  --mermaid-statediagram-clusters-note-rect-bgcolor: none;
  --mermaid-statediagram-clusters-note-rect-border: none;
  --mermaid-statediagram-note-bgcolor: #f8bc61;

  /* ER DIAGRAM COLORS */
  --mermaid-erdiagram-bgcolor: #96cff1;
  --mermaid-erdiagram-odd-bgcolor: #bee4fc;
  --mermaid-erdiagram-even-bgcolor: #f4faff;
  --mermaid-erdiagram-labelbox-bgcolor: #bee4fc;
  
  /* GANTT COLORS */
  --mermaid-gantt-section-color: #1f2020;
  /* --mermaid-gantt-section-bgcolor: rgba(90, 166, 253, 0.568); */
  --mermaid-gantt-done-task-color:  #42fa61;
  --mermaid-gantt-active-task-color: #f8bc61;
  --mermaid-gantt-future-task-color: #fa7975;
  --mermaid-gantt-exclude-range: #f7a0ff;

  /* PIE CHART */
  /* TO DO? */

  /* WIDTHS & STROKES */
  --mermaid-box-stroke-width: 2px;
  /* --mermaid-classdiagram-stroke-width: calc(var(--mermaid-box-stroke-width)/1.2); */
  --mermaid-classdiagram-stroke-width: 1.2px;
  --mermaid-lines-stroke-width: 2px;
  --mermaid-er-relationship-stroke-width: 1.2px;
  --mermaid-relation-stroke-width: 1.1px;
}


/* ************************************************************************** */
/* COMMONS */
/* ************************************************************************** */

/* MOUSE SELECTION */
/* ::selection {
  color: red;
  background-color: blue;
} */

svg[id^="mermaid-"] {
  /* fill: var(--md-typeset-color) !important;
  stroke: var(--md-typeset-color) !important; */
  fill: var(--mermaid-lines-color) !important;
  stroke: var(--mermaid-lines-color) !important;
  font-size: 16px !important;
}

svg[id^="mermaid-"] svg {
/* svg[id^="mermaid-"] { */
  font-size: 1em !important;
}

/* COMMON BOX FILLS */
svg[id^="mermaid-"] .node rect:not(rect.label-container, .node.statediagram-note rect), svg[id^="mermaid-"] .node circle:not(.node circle.state-start, .node circle.state-end, circle.label-container), 
svg[id^="mermaid-"] .node ellipse, svg[id^="mermaid-"] .node polygon, 
svg[id^="mermaid-"] .node path, svg[id^="mermaid-"] polygon.label-container, 
svg[id^="mermaid-"] rect:not(rect.journey-section, rect.task, .cluster rect, rect.section, rect.note, .legend rect, rect.er.relationshipLabelBox, rect.er.entityBox, rect.er.attributeBoxOdd, rect.er.attributeBoxEven, .statediagram-cluster rect.outer, rect.label-container, .statediagram-cluster rect.inner, rect.actor, rect[class^="activation"], .edgeLabel .label rect, rect.exclude-range, .clusters .note-cluster rect, .node.statediagram-note rect)
{
  fill: var(--mermaid-box-bgcolor) !important;
}

/* COMMON BOX STROKE WIDTHS */
svg[id^="mermaid-"] .node rect, svg[id^="mermaid-"] .node circle, 
svg[id^="mermaid-"] .node ellipse,
svg[id^="mermaid-"] .node path, svg[id^="mermaid-"] rect.actor, 
svg[id^="mermaid-"] g.classGroup rect, svg[id^="mermaid-"] .er.entityBox,
svg[id^="mermaid-"] rect.task {
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

/* COMMON PATHS COLOR */
svg[id^="mermaid-"] .edgePath .path, svg[id^="mermaid-"] .relation,
svg[id^="mermaid-"] [class^="messageLine"], svg[id^="mermaid-"] line:not(.mouth, .divider, .loopLine, [id^="actor"]), 
svg[id^="mermaid-"] .er.relationshipLine, svg[id^="mermaid-"] .flowchart-link,
svg[id^="mermaid-"] #statediagram-barbEnd {
  stroke: var(--mermaid-lines-color) !important;
}

/* COMMON ARROWS BACKGROUND COLOR */
svg[id^="mermaid-"] .arrowheadPath, svg[id^="mermaid-"] .marker,
svg[id^="mermaid-"] #statediagram-barbStart, svg[id^="mermaid-"] #statediagram-barbEnd { 
  fill: var(--mermaid-lines-color) !important;
}

/* COMMON TEXTS */

svg[id^="mermaid-"] text.actor > tspan, svg[id^="mermaid-"] g.classGroup text,
svg[id^="mermaid-"] .label text, svg[id^="mermaid-"] span, 
svg[id^="mermaid-"] .noteText > tspan, svg[id^="mermaid-"] text.slice {
  fill: var(--mermaid-box-text-color) !important;
  color: var(--mermaid-box-text-color) !important;
  stroke: var(--mermaid-box-text-color) !important;
}

svg[id^="mermaid-"] [class*="journey-section"] .label,
svg[id^="mermaid-"] rect.task[class*="task-type"] ~ switch div.task div.label{
  color: var(--mermaid-box-text-color) !important;
}

svg[id^="mermaid-"] text.legend + g ~ text { /* JOURNEY TITLES */
  fill: var(--mermaid-title-color) !important;
  color: var(--mermaid-title-color) !important;
  stroke: var(--mermaid-title-color) !important;
}

svg[id^="mermaid-"] g.classGroup text {
  font-size: 16px !important;
}

svg[id^="mermaid-"] g.classGroup text span {
  padding-top: 2em !important;
}

svg[id^="mermaid-"] .labelText {
  fill: var(--md-typeset-color) !important;
}

svg[id^="mermaid-"] .pieTitleText, svg[id^="mermaid-"] .titleText {
  fill: var(--mermaid-title-color) !important;
  color: var(--mermaid-title-color) !important;
  stroke: var(--mermaid-title-color) !important;
}

svg[id^="mermaid-"] .legend, svg[id^="mermaid-"] .legend text {
  fill: var(--mermaid-legend-color) !important;
  color: var(--mermaid-legend-color) !important;
  stroke: var(--mermaid-legend-color) !important;
}


/* ************************************************************************** */
/* GRAPH / FLOWCHART DIAGRAM */
/* ************************************************************************** */

svg[id^="mermaid-"] .node[id*="flowchart"] rect.label-container, svg[id^="mermaid-"] .node polygon.label-container,
svg[id^="mermaid-"] circle.label-container {
  fill: var(--mermaid-flowchart-bgcolor) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] .cluster .label foreignObject {
  font-size: 1.1em !important;
}

svg[id^="mermaid-"] .node rect, svg[id^="mermaid-"] .node circle:not(.node circle.state-start, .node circle.state-end), 
svg[id^="mermaid-"] .node ellipse, svg[id^="mermaid-"] .node polygon,
svg[id^="mermaid-"] .node path,
svg[id^="mermaid-"] g.classGroup line, svg[id^="mermaid-"] g.classGroup rect,
svg[id^="mermaid-"] .er.entityBox, svg[id^="mermaid-"] .task {
  stroke: var(--mermaid-box-border-color) !important;
}

svg[id^="mermaid-"] .loopText, svg[id^="mermaid-"] .loopText > tspan {
  /* Loop Texts in Square Brackets */
  fill: var(--mermaid-sequencediagram-loop-brackettext-color) !important;
  color: var(--mermaid-sequencediagram-loop-brackettext-color) !important;
  stroke: var(--mermaid-sequencediagram-loop-brackettext-color) !important;
}

svg[id^="mermaid-"] .edgeLabel .label rect:not(.statediagram .edgeLabel .label rect) {
  fill: var(--mermaid-label-outside-bgcolor) !important;
}

svg[id^="mermaid-"] .label { 
  /* LABEL BORDERS of FLOWCHARTS */
  stroke: var(--mermaid-label-border-color) !important;
}

svg[id^="mermaid-"] .label:not(.cluster  .label) { /* TEXT COLOR in FLOWCHART LABELS */
  color: var(--mermaid-box-text-color) !important;
}

svg[id^="mermaid-"] .cluster .label {
  color: var(--mermaid-flowchart-cluster-label-color) !important;
}

svg[id^="mermaid-"] .edge-thickness-normal[class*="flowchart"] { /* State Diagram Lines Stroke Width */
  stroke-width: var(--mermaid-lines-stroke-width) !important;
}

/* ************************************************************************** */
/* SEQUENCE DIAGRAM */
/* ************************************************************************** */

svg[id^="mermaid-"] rect.actor, svg[id^="mermaid-"] [class^="activation"] {
  fill: var(--mermaid-sequencediagram-bgcolor) !important;
}

svg[id^="mermaid-"] line.loopLine, svg[id^="mermaid-"] line[id^="actor"],
svg[id^="mermaid-"] [class^="activation"], svg[id^="mermaid-"] .actor {
  stroke: var(--mermaid-box-border-color) !important;
}

svg[id^="mermaid-"] line:not(line.divider) {
  stroke-width: var(--mermaid-lines-stroke-width) !important;
}

svg[id^="mermaid-"] marker[id^="arrowhead"] path, svg[id^="mermaid-"] marker[id^="crosshead"] path,
svg[id^="mermaid-"] marker[id^="filledhead"] path { 
  /* ARROWHEADS */
  fill: var(--mermaid-lines-color) !important;
}

svg[id^="mermaid-"] .note {
  /* Sequence Diagrams Notes */
  fill: var(--mermaid-sequencediagram-note-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
}

svg[id^="mermaid-"] .labelBox {   /* Loops Labels CSS */
  fill: var(--mermaid-sequencediagram-loop-bgcolor) !important;
  stroke: var(--mermaid-sequencediagram-loop-border) !important;
}

svg[id^="mermaid-"] marker[id^="sequencenumber"] { /* Sequence Number BgColor */
  fill: var(--mermaid-sequencediagram-sequencenumber-bgcolor) !important;
}

svg[id^="mermaid-"] .sequenceNumber { /* Sequence Number Text */
  fill: var(--mermaid-sequencediagram-sequencenumber-textcolor) !important;
  stroke: var(--mermaid-sequencediagram-sequencenumber-textcolor) !important;
}

svg[id^="mermaid-"] .actor-man circle, svg[id^="mermaid-"] .actor-man line { /* Actor Man Circle */
  fill: var(--mermaid-sequencediagram-actorman-head-bgcolor) !important;
  stroke: var(--mermaid-sequencediagram-actorman-line) !important;
}

/* ************************************************************************** */
/* CLASS DIAGRAMS */
/* ************************************************************************** */

svg[id^="mermaid-"] [id^="classid-"] rect.outer.title-state {
  fill: var(--mermaid-classdiagram-bgcolor) !important;
}

svg[id^="mermaid-"] .relation {
  /* stroke-width: calc(var(--mermaid-box-stroke-width)/1.2) !important; */
  stroke-width: var(--mermaid-classdiagram-stroke-width) !important;
}

svg[id^="mermaid-"] .edgeTerminals .inner foreignObject, svg[id^="mermaid-"] .edgeTerminals .inner + foreignObject {
  width: 3em !important;
  height: 1.5em !important;
  font-size: 1.5em !important;
}

svg[id^="mermaid-"] line.divider {
  stroke-width: calc(var(--mermaid-lines-stroke-width)/1.7) !important;
}

/* ************************************************************************** */
/* STATE DIAGRAM */
/* ************************************************************************** */

svg[id^="mermaid-"] .node rect.basic.label-container:not(.node[id*="flowchart"] rect.basic.label-container),
svg[id^="mermaid-"] .node polygon.state-start {
  /* BOX BACKGROUND */
  fill: var(--mermaid-statediagram-box-bgcolor) !important;
}

svg[id^="mermaid-"] .edgeLabel .label rect {
  fill: var(--mermaid-statediagram-label-outside-bgcolor) !important;
}

svg[id^="mermaid-"] .statediagram-cluster rect.inner { /* State Diagram Inner Box */
  fill: var(--mermaid-statediagram-inner-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] .node polygon {
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] .statediagram-cluster rect.outer { /* State Diagram Outer Box */
  fill: var(--mermaid-statediagram-title-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] .statediagram-cluster.statediagram-cluster-alt rect.inner {
  fill: var(--mermaid-statediagram-cluster-alt-inner-bgcolor) !important;
}

svg[id^="mermaid-"] .edge-thickness-normal:not(.edge-thickness-normal[class*="flowchart"]) { /* State Diagram Lines Stroke Width */
  stroke-width: calc(var(--mermaid-lines-stroke-width)*0.65) !important;
}

svg[id^="mermaid-"] .node circle.state-start {
  fill: var(--mermaid-lines-color) !important;
  stroke: var(--mermaid-lines-color) !important;
}

svg[id^="mermaid-"] .node circle.state-end {
  fill: var(--mermaid-statediagram-box-bgcolor) !important;
  stroke: var(--mermaid-statediagram-box-bgcolor) !important;
}

svg[id^="mermaid-"] .node.statediagram-note rect {
  fill: var(--mermaid-statediagram-note-bgcolor) !important;
}

svg[id^="mermaid-"] .clusters rect.divider {
  stroke: var(--mermaid-statediagram-cluster-divider) !important;
  opacity: 0.5 !important;
}

svg[id^="mermaid-"] .clusters .note-cluster rect {
  fill: var(--mermaid-statediagram-clusters-note-rect-bgcolor) !important;
  stroke: var(--mermaid-statediagram-clusters-note-rect-border) !important;
}



/* ************************************************************************** */
/* ER DIAGRAMS */
/* ************************************************************************** */

svg[id^="mermaid-"] .er.entityLabel {
  fill: var(--mermaid-box-text-color) !important;
  color: var(--mermaid-box-text-color) !important;
  stroke: var(--mermaid-box-text-color) !important;
}

svg[id^="mermaid-"] text.er.entityLabel, svg[id^="mermaid-"] text.er.relationshipLabel {
  font-size: 1.07em !important;
}

svg[id^="mermaid-"] rect.er.entityBox {
  fill: var(--mermaid-erdiagram-bgcolor) !important;
}

svg[id^="mermaid-"] .er.attributeBoxOdd {
  fill: var(--mermaid-erdiagram-odd-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
  font-size: 12px !important;
}

svg[id^="mermaid-"] .er.attributeBoxEven {
  fill: var(--mermaid-erdiagram-even-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] .er.relationshipLabelBox {
  fill: var(--mermaid-erdiagram-labelbox-bgcolor) !important;
  stroke: var(--mermaid-label-border-color) !important;
}

svg[id^="mermaid-"] .er.relationshipLabel {
  fill: var(--mermaid-label-text-color) !important;
  stroke: var(--mermaid-label-text-color) !important;
  /* color: var(--mermaid-label-text-color) !important; */
}


svg[id^="mermaid-"] marker#ZERO_OR_MORE_START circle,
svg[id^="mermaid-"] marker#ZERO_OR_MORE_END circle,
svg[id^="mermaid-"] marker#ZERO_OR_ONE_START circle,
svg[id^="mermaid-"] marker#ZERO_OR_ONE_START circle {
  fill: var(--md-default-bg-color) !important;
  stroke: var(--mermaid-lines-color) !important;
}

/* ************************************************************************** */
/* USER JOURNEY  */
/* ************************************************************************** */

svg[id^="mermaid-"] rect.journey-section {
  stroke: var(--mermaid-box-border-color) !important;
  stroke-width: var(--mermaid-box-stroke-width) !important;
}

svg[id^="mermaid-"] g.classGroup line, svg[id^="mermaid-"] .task-line,
svg[id^="mermaid-"] .edgePath .path,
svg[id^="mermaid-"] [class^="messageLine"] {
  stroke-width: var(--mermaid-lines-stroke-width) !important;
}

svg[id^="mermaid-"] line.divider {
  stroke: var(--mermaid-box-border-color) !important;
}

svg[id^="mermaid-"] .er.relationshipLine {
  stroke-width: var(--mermaid-er-relationship-stroke-width) !important;
}

svg[id^="mermaid-"] [class^="actor-line"] {
  stroke-width: calc(var(--mermaid-lines-stroke-width)/2) !important;
}

svg[id^="mermaid-"] .cluster rect {
  fill: var(--mermaid-cluster-subgraph-bgcolor) !important;
  stroke: var(--mermaid-box-border-color) !important;
}

svg[id^="mermaid-"] text.messageText, svg[id^="mermaid-"] .edgeLabel, 
svg[id^="mermaid-"] .classLabel .label {
  fill: var(--mermaid-label-text-color) !important;
  stroke: var(--mermaid-label-text-color) !important;
  color: var(--mermaid-label-text-color) !important;
}

svg[id^="mermaid-"] .edgeLabel {
  background-color: var(--mermaid-label-bgcolor) !important;
}

/* ************************************************************************** */
/* GANTT */
/* ************************************************************************** */

svg[id^="mermaid-"] .taskText, svg[id^="mermaid-"] .doneText, 
svg[id^="mermaid-"] .taskTextOutsideRight,
svg[id^="mermaid-"] .activeText
{
  fill: var(--mermaid-box-text-color) !important;
  stroke: var(--mermaid-box-text-color) !important;
  color: var(--mermaid-box-text-color) !important;
  font-size: 1.3em !important;
}

svg[id^="mermaid-"] rect.exclude-range {
  fill: var(--mermaid-gantt-exclude-range) !important;
}

svg[id^="mermaid-"] .sectionTitle {
  fill: var(--mermaid-gantt-section-color) !important;
  stroke: var(--mermaid-gantt-section-color) !important;
  font-size: 1.1em !important;
}

svg[id^="mermaid-"] .grid .tick text {
  fill: var(--mermaid-lines-color) !important;
  font-size: 1.1em !important;
}

svg[id^="mermaid-"] .task:not(.legend ~ g .task[class*="task-type-"]) {
  fill: var(--mermaid-gantt-future-task-color) !important;
}

svg[id^="mermaid-"] .task:not(.legend ~ g .task[class*="task-type-"])[class*="done"] {
  fill: var(--mermaid-gantt-done-task-color) !important;
}

svg[id^="mermaid-"] .task:not(.legend ~ g .task[class*="task-type-"])[class*="active"] {
  fill: var(--mermaid-gantt-active-task-color) !important;
}

/* ************************************************************************** */
/* PIE CHART */
/* ************************************************************************** */

/* svg[id^="mermaid-"] .pieCircle {
  color: #fff !important;
} */

/* ************************************************************************** */
/* GIT DIAGRAM */
/* ************************************************************************** */

svg[id^="mermaid-"] .commit {
  line-height: 1.1 !important;
}

